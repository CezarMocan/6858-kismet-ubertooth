This modified version of the Kismet-Ubertooth plugin implements channel hopping with a piconet in Kismet (original plugin does not hop channels at all), so that we can follow traffic from a specific Bluetooth device, and so future developers in this area will have a better method by which to capture and analyze Bluetooth traffic.


SETUP
-------------------------------------------------------------------------------
Requirements (download and set up the following):
- Kismet [http://www.kismetwireless.net/]
- Project Ubertooth [http://ubertooth.sourceforge.net/]
- Wireshark [Ubertooth specific: http://ubertooth.sourceforge.net/usage/build/]

Replace the Kismet-Ubertooth plugin with our modified version:
$ cd ~/ubertooth/host/kismet (or wherever your Kismet-Ubertooth plugin is)
$ sudo rm -rf plugin-ubertooth
$ git clone git@github.com:cathywu/6858-kismet-ubertooth.git plugin-ubertooth


CONFIGURING THIS PLUGIN
-------------------------------------------------------------------------------
Our implementation current requires hardcoding the host device's BD_ADDR, which you can set in packetsource_ubertooth.cc > ubertooth_follow_setup() > ubertooth->pn.LAP/pn.UAP:

    ubertooth->pn.LAP = strtol("2AD438", &end, 16);
    ubertooth->pn.UAP = strtol("76", &end, 16);

You can find the BD_ADDR of the host machine by running on the host device (may require installing BlueZ, libbluetooth):
$ hcitool dev

The output will look something like:
    Devices:
            hci0    00:11:76:2A:D4:38

The LAP is the last 3 bytes of the address. The UAP is the 4th last byte. The top 2 bytes are the NAP, which you don't need. With the UAP/LAP, edit those lines of code (in hex, but exclude the 0x) and rebuild the plugin.

To rebuild plugin-ubertooth for Kismet, go to Kismet install directory:
$ make && make plugins && sudo make suidinstall && sudo make plugins-install

For good measure, you can also "clean" the Kismet-Ubertooth plugin directory:
$ rm *.o *.so

If you have issues, try resetting the Ubertooth:
$ sudo ubertooth-util -r


USING THIS PLUGIN
-------------------------------------------------------------------------------
To run Kismet:
$ sudo kismet

Enable the ubertooth plugin and you will be able to monitor the server console for detected devices and piconets.

Then run wireshark and load up the pcapbtbb file (saved to the directory from which you are running kismet) to examine the Bluetooth packets!


NOTES
-------------------------------------------------------------------------------
Debug statements specific to project:
printf("6858 debug - <DEBUG COMMENT>\n");


-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------


Kismet-Ubertooth [Original README]
-------------------------------------------------------------------------------

0.  NOT COMPLETE

1.  What is Kismet-Ubertooth
2.  Caveats
3.  Compiling
4.  Installing
5.  Using

0.  NOT COMPLETE

*** THIS CODE IS CURRENTLY NOT COMPLETE ***

What it does:

* Control one (and only one) Ubertooth Zero or Ubertooth One
* Monitor one Bluetooth channel
* Display the LAP of Bluetooth packets
* Determine and display the UAP of Bluetooth packets
* Log to pcap file

What it should be able to do in the future:

* Determine the clock of a target piconets
* Hop along with a target piconet through all channels
* Control more than one Ubertooth Zero or Ubertooth One
* Read pcap files
* Print debug info about packets

1.  What is Kismet-Ubertooth

	Kismet-Ubertooth is a Kismet plugin which provides Bluetooth support in
	Kismet.  It relies on the Bluetooth baseband library, libbtbb 
	(http://libbtbb.sourceforge.net/). Kismet-Ubertooth performs passive 
	monitoring of Bluetooth networks using the Ubertooth platform
	(http://ubertooth.sourceforge.net/).

	It CAN NOT BE USED with 802.11 wi-fi cards, it is a completely different
	protocol.  If you do not have an Ubertooth but have a Bluetooth adapter,
	try the btscan plugin instead.  It performs active scanning of discoverable
	Bluetooth devices.  Better yet, build yourself an Ubertooth One.

	Kismet-Ubertooth defines the decoders, loggers, and UI controls for
	Bluetooth networks in a common fashion, and supports reading and writing
	Bluetooth baseband pcap files.

	The Bluetooth baseband protocol is the air interface of Bluetooth.  It
	operates in the 2.4 GHz ISM band.  There is a separate interface known as
	HCI (Host Controller Interface) that operates between a host computer and
	an attached Bluetooth adapter.  Kismet-Ubertooth uses special hardware to
	directly access the baseband layer.  It does not operate at the HCI layer.
	Try hcidump if you want to access HCI.

2.  Caveats

	This code is currently only partially developed and may not provide full
	functionality.

	This code has only been tested on Linux.  This code MAY work on other
	platforms, but currently it is only developed with Linux as a target.

3.  Compiling

	Compiling the Kismet-Ubertooth plugin requires the Kismet source be
	installed and configured.  The libbtbb library (0.5 or higher) and libusb
	(1.0 or higher) must also be installed.

	By default, Kismet-Ubertooth expects the Kismet source to be in
	/usr/src/kismet; this can be overridden by setting the KIS_SRC_DIR
	environment variable:

		cd plugin-ubertooth
		KIS_SRC_DIR=/home/foo/src/kismet make

4.  Installing

	Kismet plugins may be installed system-wide in the plugins directory (by
	default, /usr/local/lib/kismet/) or in the users home directory
	(~/.kismet/plugins).

	To install in the system-wide directory:

        cd plugin-ubertooth
        KIS_SRC_DIR=/home/foo/src/kismet make install

    Plugins can be installed in the current users home directory with:

        cd plugin-ubertooth
        make userinstall

5.  Using

	Once the plugin is loaded, Kismet will automatically understand and
	decode pcap files with the Bluetooth link data.

	To capture from an Ubertooth Zero or Ubertooth One, plug in the USB device,
	and define a capture source in Kismet using the interface 'ubertooth'.  The
	device will be automatically detected.

	If you have multiple Ubertooth devices connected, Kismet-Ubertooth uses the
	first one it finds.  Kismet-Ubertooth currently is not capable of using
	multiple Ubertooth devices simultaneously.

	To enable pcap logging, the logfile must be turned on by adding
	'pcapbtbb' to the logtypes= line of the kismet.conf.

